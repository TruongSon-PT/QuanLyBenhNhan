/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;

import DAO.QuanLyNguoiDung;
import DoiTuong.NguoiDung;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class QuanLyNguoiDung_Frame extends javax.swing.JFrame {
    private final QuanLyNguoiDung qlnd;
    /**
     * Creates new form QuanLyNguoiDung_Frame
     */
    public QuanLyNguoiDung_Frame() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.qlnd = new QuanLyNguoiDung();
        this.khoiTaoUI();
        this.hienThi();
    }
    public void khoiTaoUI(){
        this.txtUserName.setText("");
        this.txtPass.setText("");
        this.txtConfirm.setText("");
    }
    public void hienThi(){
        DefaultTableModel dtm = (DefaultTableModel) this.tblDanhSach.getModel();
        dtm.setRowCount(0);
        try {
            ArrayList<NguoiDung> list = this.qlnd.xuatDanhSach();
            if(list.isEmpty()){
                return;
            }
            for(NguoiDung x: list){
                Object[] row = new Object[]{
                    x.getUserName(),
                    x.getPass(),
                    x.getChucVu()
                };
                dtm.addRow(row);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi kết nối!");
        }
    }
    public NguoiDung docForm(){
        String userName = this.txtUserName.getText();
        String passWord = this.txtPass.getText();
        String confirm = this.txtConfirm.getText();
        if(userName.length()==0){
            JOptionPane.showMessageDialog(this, "Tên đăng nhập không được để trống!");
            this.txtUserName.requestFocus();
            this.txtUserName.setBackground(Color.yellow);
            return null;
        }else this.txtUserName.setBackground(Color.white);
        if(userName.length()<6||userName.length()>10){
            JOptionPane.showMessageDialog(this, "Tên đăng nhập không được lớn hơn 10 kí tự hoặc nhỏ hơn 6 kí tự!");
            this.txtUserName.requestFocus();
            this.txtUserName.setBackground(Color.yellow);
            return null;
        }else this.txtUserName.setBackground(Color.white);
        try {
            ArrayList<NguoiDung> list = this.qlnd.xuatDanhSach();
            if(!list.isEmpty()){
                for(NguoiDung x: list){
                    if(x.getUserName().equals(userName)){
                        JOptionPane.showMessageDialog(this, "Tên đăng nhập đã tồn tại!");
                        this.txtUserName.requestFocus();
                        this.txtUserName.setBackground(Color.yellow);
                        return null;
                    }else this.txtUserName.setBackground(Color.white);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi kết nối!");
        }
        if(passWord.length()==0){
            JOptionPane.showMessageDialog(this, "Mật khẩu không được để trống!");
            this.txtPass.requestFocus();
            this.txtPass.setBackground(Color.yellow);
            return null;
        }else this.txtPass.setBackground(Color.white);
        if(confirm.length()==0){
            JOptionPane.showMessageDialog(this, "Xác nhận không được để trống!");
            this.txtConfirm.requestFocus();
            this.txtConfirm.setBackground(Color.yellow);
            return null;
        }else this.txtConfirm.setBackground(Color.white);
        if(Arrays.equals(passWord.toCharArray(), confirm.toCharArray())==false){
            JOptionPane.showMessageDialog(this, "Mật khẩu và xác nhận không khớp!");
            this.txtPass.requestFocus();
            this.txtPass.setBackground(Color.yellow);
            this.txtConfirm.setBackground(Color.yellow);
            return null;
        }else{
            this.txtPass.setBackground(Color.white);
            this.txtConfirm.setBackground(Color.white);
        }
        String chucVu = this.cbbChucVu.getSelectedItem().equals("Bác sỹ")?"Bs":"YT";
        NguoiDung nd = new NguoiDung(userName, passWord, chucVu);
        return nd;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTong = new javax.swing.JPanel();
        lblTieuDe = new javax.swing.JLabel();
        lblUser = new javax.swing.JLabel();
        lblPass = new javax.swing.JLabel();
        lblConfirm = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        cbbChucVu = new javax.swing.JComboBox<>();
        lblChucVu = new javax.swing.JLabel();
        txtPass = new javax.swing.JTextField();
        txtConfirm = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDanhSach = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlTong.setBackground(new java.awt.Color(204, 255, 255));

        lblTieuDe.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblTieuDe.setForeground(new java.awt.Color(0, 51, 153));
        lblTieuDe.setText("QUẢN LÝ NGƯỜI DÙNG");

        lblUser.setText("Tên đăng nhập:");

        lblPass.setText("Mật khẩu:");

        lblConfirm.setText("Xác nhận:");

        cbbChucVu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Y tá", "Bác sỹ" }));

        lblChucVu.setText("Chức vụ:");

        tblDanhSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên đăng nhập", "Mật khẩu", "Chức vụ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDanhSach);

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TaiNguyen/Add_24PX.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TaiNguyen/Update24.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TaiNguyen/Button-Close-icon_24px.png"))); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTongLayout = new javax.swing.GroupLayout(pnlTong);
        pnlTong.setLayout(pnlTongLayout);
        pnlTongLayout.setHorizontalGroup(
            pnlTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTongLayout.createSequentialGroup()
                .addGroup(pnlTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTongLayout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(lblTieuDe))
                    .addGroup(pnlTongLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(pnlTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlTongLayout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                                .addGroup(pnlTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnThoat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(pnlTongLayout.createSequentialGroup()
                                .addGroup(pnlTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblUser)
                                    .addComponent(lblChucVu))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbbChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnlTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPass, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblConfirm, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtConfirm, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                    .addComponent(txtPass))))))
                .addGap(68, 68, 68))
        );
        pnlTongLayout.setVerticalGroup(
            pnlTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTongLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lblTieuDe)
                .addGap(23, 23, 23)
                .addGroup(pnlTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUser)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPass)
                    .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblConfirm)
                    .addComponent(cbbChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblChucVu)
                    .addComponent(txtConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlTongLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlTongLayout.createSequentialGroup()
                        .addComponent(btnThem)
                        .addGap(31, 31, 31)
                        .addComponent(btnXoa)
                        .addGap(40, 40, 40)
                        .addComponent(btnThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        NguoiDung nd = this.docForm();
        if(nd==null){
            return;
        }
        try {
            boolean ok = this.qlnd.them(nd);
            if(ok==true){
                JOptionPane.showMessageDialog(this, "Thêm thành công!");
                this.hienThi();
            }else JOptionPane.showMessageDialog(this, "Thêm thất bại!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi kết nối!");
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        String userName = JOptionPane.showInputDialog(this,"Nhập tên đăng nhập cần xóa:");
        if(userName==null){
            return;
        }
        try {
            ArrayList<NguoiDung> list = this.qlnd.xuatDanhSach();
            boolean ok = false;
            if(!list.isEmpty()){
                for(NguoiDung x: list){
                    if(x.getUserName().equals(userName)){
                        ok=true;
                        break;
                    }
                }
            }else{
                JOptionPane.showMessageDialog(this, "Chưa có tải khoản chưa được thêm!");
            }
            if(ok==false){
                JOptionPane.showMessageDialog(this, "Không tìm thấy tài khoản nào có tên đăng nhập là: "+userName);
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi kết nối!");
        }
        int chk = JOptionPane.showConfirmDialog(this, "Bạn muốn xóa tài khoản có tên đăng nhập là: "+userName,"Xác nhận",JOptionPane.YES_NO_OPTION);
        if(chk==JOptionPane.YES_OPTION){
            try {
                boolean ok = this.qlnd.xoa(userName);
                if (ok == true) {
                    JOptionPane.showMessageDialog(this, "Xóa thành công!");
                    this.hienThi();
                } else {
                    JOptionPane.showMessageDialog(this, "Xóa thất bại!");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi kết nối!");
            }
        }
        
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        Login lg = new Login();
        lg.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnThoatActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbbChucVu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblChucVu;
    private javax.swing.JLabel lblConfirm;
    private javax.swing.JLabel lblPass;
    private javax.swing.JLabel lblTieuDe;
    private javax.swing.JLabel lblUser;
    private javax.swing.JPanel pnlTong;
    private javax.swing.JTable tblDanhSach;
    private javax.swing.JTextField txtConfirm;
    private javax.swing.JTextField txtPass;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
